Apr 8 2015
  - Added two new modules for use with other spectrographs (operaRotateMirrorCrop, operaMedianCombine)
  - Added ability to write output using the same order wavelength ranges as LE (operaGenerateLEFormats)
  - Added ability to use FITS files as input/output when creating flat response files (operaCreateFlatResponse)
  - Added ability to use FITS file as input flat response (operaSpectralOrderVector)
  - Added ability to normalize when no wavelength mask is provided (operaSpectralOrderVector)
  - Added ability to use .fits.gz input files with Makefile harness
  - Added ability to use short names in Python harness (e.g. CALIB instead of CALIBRATIONS).
  - Added table of order wavelength ranges used by LE to use with operaGenerateLEFormats
  - Added flat response spectra for OLAPA and EEV1 detectors
  - Added new flat response for OLAPA in FITS format generated by median combining flat responses from 8 exposures of 2 standards, HR7596 and HR8634, taken in Polar+Slow, on the night of 13AQ10-Jun30
  - Fixed description for header keyword "HRV" in output FITS files (operaCreateProduct)
  - Fixed argument parsing error when creating flat response files (operaCreateFlatResponse)
  - Fixed code dealing with minorder/maxorder parameters (operaExtraction, operaPolarIntensity, operaPolarimetryCorrection, operaStarOnly, operaStarPlusSky, operaWavelengthCalibration, operaGenerateLEFormats)
  - Fixed cases where spectral orders were not properly flagged as containing spectral elements (operaSpectralOrder)
  - Fixed issue where an exception was thrown in a valid situation, specifically the creation of SpectralEnergyDistribution elements in a spectral order with zero beams (operaSpectralOrder)
  - Fixed issue where operaStitchOrders was called twice by the Makefile harness
  - Fixed call to operaTelluricWavelengthCorrection in the Makefile harness to use correct argument names when using polar files
  - Fixed situation where extra files were not properly removed from spectra directory by the Makefile harness when plotting
  - Fixed typo causing wrong parameter to be passed to operaInstrumentProfileCalibration by Python harness
  - Fixed issue where using verbose mode with the Python harness caused conflicts with operaArgumentHandler in some modules
  - Fixed issue where wavelengthCalibration was not converging for one of the orders by changing values of uncalibrated_linewidth parameter (harness parameters)
  - Fixed issues with finding the center of orders in operaGeometryCalibration by changing recenterIPUsingSliceSymmetry to "0" for StarOnly mode (harness parameters)
  - Fixed unusual crash in operaWavelengthCalibration by changing value of nsigclip from 2.5 to 2.25 to (crashed only on 14BQ04-Sep15 in a test run of 28 nights) (harness parameters)
  - Updated parameter passing method for some modules (operaStitchOrders, operaBarycentricWavelengthCorrection, operaHeliocentricWavelengthCorrection, operaTelluricWavelengthCorrection)
  - Updated the way WriteSpectralOrders determines minorder/maxorder by only accepting orders with the corresponding component (operaSpectralOrderVector)
  - Updated names and usage of certain confusing parameters to increase clarity (operaInstrumentProfileCalibration)
  - Updated library functions that are used repeatedly in mulitple modules to significantly improve performance (operaInstrumentProfile::getipDataFromPolyModel, operaSpectralOrder::calculateXCorrBetweenIPandImage) 
  - Updated large sections of code to improve geometry calibration and increase reliability (operaGeometryCalibration, operaCCD)
  - Updated IPtilt value to depend on mode when using Makefile harness, matching the Python harness
  - Updated MinPeakDepth value to depends on speed in the Makefile harness
  - Updated GRACES parameters in Makefile harness
  - Updated Python harness to include GEOMETRY as one of the products in CALIBRATIONS
  - Updated Python harness to include target to create LE FITS product
  - Updated Python harness to removed masterfluxcalibration section, since flatresponse is now used by default
  - Updated Python harness parameters to create flat response in FITS format
  - Updated Python harness so users no longer need for users to touch .py files since datarootdir, pipelinehomedir and productrootdir variables are now command line arguments
  - Updated Python harness to cleaned up outdated comments
  - Updated parameters for operaInstrumentProfileCalibration (harness parameters)
  - Updated wcal_ref.dat to add a "first guess" for order #22
  - Updated each reference spectrum of standards (../config/standards/*_operaFluxCal.dat) to cover a wider wavelength range because the first order used now (#22) exceeds the previous range
  - Updated wavelengthMaskForUncalContinuumDetection.txt and wavelengthMaskForRefContinuumDetection.txt to cover a wider range as well
  - Updated installation instructions
